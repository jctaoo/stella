---
import { ClientRouter } from "astro:transitions";

export type Props = {
  title: string;
  description?: string;
};

const { title, description } = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<title>{title}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}

<ClientRouter />

<script is:inline>
  /**
   * Inline script cannot use import
   * @returns "light" | "dark"
   */
  function getNormalizedTheme() {
    const localStorageTheme = localStorage?.getItem("theme") ?? "";
    if (["dark", "light"].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  }

  function applyCurrentTheme() {
    const theme = getNormalizedTheme();
    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
  }

  document.addEventListener("astro:after-swap", () => {
    applyCurrentTheme();
  });
  applyCurrentTheme();
</script>
